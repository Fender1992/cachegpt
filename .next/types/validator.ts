// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../app/a/[slug]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/a/[slug]">> = Specific
  const handler = {} as typeof import("../../app/a/[slug]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/about/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/about">> = Specific
  const handler = {} as typeof import("../../app/about/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/bugs/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/bugs">> = Specific
  const handler = {} as typeof import("../../app/admin/bugs/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/enterprise/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/enterprise">> = Specific
  const handler = {} as typeof import("../../app/admin/enterprise/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/feature-flags/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/feature-flags">> = Specific
  const handler = {} as typeof import("../../app/admin/feature-flags/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/funnel-report/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/funnel-report">> = Specific
  const handler = {} as typeof import("../../app/admin/funnel-report/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/auth/callback/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/callback">> = Specific
  const handler = {} as typeof import("../../app/auth/callback/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/auth/claude-setup/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/claude-setup">> = Specific
  const handler = {} as typeof import("../../app/auth/claude-setup/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/auth/provider-callback/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/provider-callback">> = Specific
  const handler = {} as typeof import("../../app/auth/provider-callback/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/auth/provider-capture/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/provider-capture">> = Specific
  const handler = {} as typeof import("../../app/auth/provider-capture/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/auth/success/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/auth/success">> = Specific
  const handler = {} as typeof import("../../app/auth/success/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/blog/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/blog">> = Specific
  const handler = {} as typeof import("../../app/blog/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/casual-dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/casual-dashboard">> = Specific
  const handler = {} as typeof import("../../app/casual-dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/casual-settings/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/casual-settings">> = Specific
  const handler = {} as typeof import("../../app/casual-settings/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/changelog/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/changelog">> = Specific
  const handler = {} as typeof import("../../app/changelog/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/chat/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/chat">> = Specific
  const handler = {} as typeof import("../../app/chat/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/cli-auth/callback/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/cli-auth/callback">> = Specific
  const handler = {} as typeof import("../../app/cli-auth/callback/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/cli-auth/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/cli-auth">> = Specific
  const handler = {} as typeof import("../../app/cli-auth/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/cli-auth/success/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/cli-auth/success">> = Specific
  const handler = {} as typeof import("../../app/cli-auth/success/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard">> = Specific
  const handler = {} as typeof import("../../app/dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/enterprise/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/enterprise">> = Specific
  const handler = {} as typeof import("../../app/enterprise/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/login/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/login">> = Specific
  const handler = {} as typeof import("../../app/login/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/modes/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/modes">> = Specific
  const handler = {} as typeof import("../../app/modes/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/onboarding/provider/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/onboarding/provider">> = Specific
  const handler = {} as typeof import("../../app/onboarding/provider/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/onboarding/welcome/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/onboarding/welcome">> = Specific
  const handler = {} as typeof import("../../app/onboarding/welcome/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/pricing/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/pricing">> = Specific
  const handler = {} as typeof import("../../app/pricing/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/privacy/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/privacy">> = Specific
  const handler = {} as typeof import("../../app/privacy/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/security/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/security">> = Specific
  const handler = {} as typeof import("../../app/security/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/settings/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/settings">> = Specific
  const handler = {} as typeof import("../../app/settings/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/status/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/status">> = Specific
  const handler = {} as typeof import("../../app/status/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/support/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/support">> = Specific
  const handler = {} as typeof import("../../app/support/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/terms/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/terms">> = Specific
  const handler = {} as typeof import("../../app/terms/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/check-news-keys/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/check-news-keys">> = Specific
  const handler = {} as typeof import("../../app/api/admin/check-news-keys/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/admin/migrate-database/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/admin/migrate-database">> = Specific
  const handler = {} as typeof import("../../app/api/admin/migrate-database/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/api-keys/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/api-keys">> = Specific
  const handler = {} as typeof import("../../app/api/api-keys/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/issuer/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/issuer">> = Specific
  const handler = {} as typeof import("../../app/api/auth/issuer/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/auth/session-health/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/auth/session-health">> = Specific
  const handler = {} as typeof import("../../app/api/auth/session-health/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/bugs/manage/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/bugs/manage">> = Specific
  const handler = {} as typeof import("../../app/api/bugs/manage/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/bugs/report/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/bugs/report">> = Specific
  const handler = {} as typeof import("../../app/api/bugs/report/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/cache-feedback/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/cache-feedback">> = Specific
  const handler = {} as typeof import("../../app/api/cache-feedback/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/cache-warm/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/cache-warm">> = Specific
  const handler = {} as typeof import("../../app/api/cache-warm/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/cache/health/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/cache/health">> = Specific
  const handler = {} as typeof import("../../app/api/cache/health/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/checkout/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/checkout">> = Specific
  const handler = {} as typeof import("../../app/api/checkout/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/claude-sync/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/claude-sync">> = Specific
  const handler = {} as typeof import("../../app/api/claude-sync/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/cli-auth/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/cli-auth">> = Specific
  const handler = {} as typeof import("../../app/api/cli-auth/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/conversations/[id]/messages/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/conversations/[id]/messages">> = Specific
  const handler = {} as typeof import("../../app/api/conversations/[id]/messages/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/conversations/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/conversations">> = Specific
  const handler = {} as typeof import("../../app/api/conversations/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/cron/model-update/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/cron/model-update">> = Specific
  const handler = {} as typeof import("../../app/api/cron/model-update/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/cron/process-notifications/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/cron/process-notifications">> = Specific
  const handler = {} as typeof import("../../app/api/cron/process-notifications/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/cron/scan-cache-metadata/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/cron/scan-cache-metadata">> = Specific
  const handler = {} as typeof import("../../app/api/cron/scan-cache-metadata/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/dashboard-stats/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/dashboard-stats">> = Specific
  const handler = {} as typeof import("../../app/api/dashboard-stats/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/debug/session/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/debug/session">> = Specific
  const handler = {} as typeof import("../../app/api/debug/session/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/feature-flags/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/feature-flags">> = Specific
  const handler = {} as typeof import("../../app/api/feature-flags/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/health-check/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/health-check">> = Specific
  const handler = {} as typeof import("../../app/api/health-check/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/health/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/health">> = Specific
  const handler = {} as typeof import("../../app/api/health/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/me/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/me">> = Specific
  const handler = {} as typeof import("../../app/api/me/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/metrics/system/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/metrics/system">> = Specific
  const handler = {} as typeof import("../../app/api/metrics/system/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/metrics/usage/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/metrics/usage">> = Specific
  const handler = {} as typeof import("../../app/api/metrics/usage/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/model-updates/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/model-updates">> = Specific
  const handler = {} as typeof import("../../app/api/model-updates/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/modes/click/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/modes/click">> = Specific
  const handler = {} as typeof import("../../app/api/modes/click/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/modes/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/modes">> = Specific
  const handler = {} as typeof import("../../app/api/modes/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/provider-models/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/provider-models">> = Specific
  const handler = {} as typeof import("../../app/api/provider-models/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/provider-models/user-available/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/provider-models/user-available">> = Specific
  const handler = {} as typeof import("../../app/api/provider-models/user-available/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/public-stats/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/public-stats">> = Specific
  const handler = {} as typeof import("../../app/api/public-stats/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/ranking/features/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/ranking/features">> = Specific
  const handler = {} as typeof import("../../app/api/ranking/features/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/ranking/health/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/ranking/health">> = Specific
  const handler = {} as typeof import("../../app/api/ranking/health/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/share/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/share">> = Specific
  const handler = {} as typeof import("../../app/api/share/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/stats/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/stats">> = Specific
  const handler = {} as typeof import("../../app/api/stats/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/stripe/webhook/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/stripe/webhook">> = Specific
  const handler = {} as typeof import("../../app/api/stripe/webhook/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/support/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/support">> = Specific
  const handler = {} as typeof import("../../app/api/support/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/telemetry/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/telemetry">> = Specific
  const handler = {} as typeof import("../../app/api/telemetry/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/test-api-key/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/test-api-key">> = Specific
  const handler = {} as typeof import("../../app/api/test-api-key/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/test-cache-db/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/test-cache-db">> = Specific
  const handler = {} as typeof import("../../app/api/test-cache-db/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/test-cache/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/test-cache">> = Specific
  const handler = {} as typeof import("../../app/api/test-cache/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/test-chat-with-user/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/test-chat-with-user">> = Specific
  const handler = {} as typeof import("../../app/api/test-chat-with-user/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/user/model-preferences/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/user/model-preferences">> = Specific
  const handler = {} as typeof import("../../app/api/user/model-preferences/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/v1/usage/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/v1/usage">> = Specific
  const handler = {} as typeof import("../../app/api/v1/usage/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/v2/unified-chat/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/v2/unified-chat">> = Specific
  const handler = {} as typeof import("../../app/api/v2/unified-chat/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/webhooks/stripe/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/webhooks/stripe">> = Specific
  const handler = {} as typeof import("../../app/api/webhooks/stripe/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}





// Validate ../../app/dashboard/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/dashboard">> = Specific
  const handler = {} as typeof import("../../app/dashboard/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
